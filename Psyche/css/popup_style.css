/* 
* popup_style.css
*
* This file defines the presentation aspects of this HTML file
* 
* Class:      SER 401
* Team:       35
* Project:    NASA Psyche Mission: Year on Psyche Simulation
* Authors:    Armando Arratia, Dan McNeil, Jenny Potocki, Josh Anselm, Tyler Brown
* Date:       10/17/24
* Revision:   1.0
*
* NASA PSYCHE MISSION STYLING GUIDELINES FULL DOCUMENT Link:https://drive.google.com/drive/folders/1MIwxLJ-mtbufn1g5_l8kPB9kicp_dtrM
* Finding Summary below:
*   Color Pallette: These are the component colors of the badge, and the larger brand system. They should be used
*                   sparingly as accents of to create hierarchy. 
* Mustard -     HEX #f9a000| RGB 250R 160G 0B
* Gold -        HEX #f47c33| RGB 245R 125G 50B
* Coral -       HEX #ef5966| RGB 239R 89G  102B
* Magenta -     HEX #a53f5b| RGB 165R 63G  91B
* Purple -      HEX #592651| RGB 89R  38G  81B
* Dark Purple - HEX #302144| RGB 48R  33G  68B
*
*   Backgrounds: The primary color pallette can be used to create gradient backgrounds with these 6 following combinations. 
*                No more than two colors are allowed to be in a single gradient!
* Dark Purple - Black
* Purple - Dark Purple
* Magenta - Purple
* Coral - Magenta
* Gold - Coral
* Mustard - Gold
*
*   Neutral Palette: A secondary set of neutral grays can be used to create hierarchy or organization in a layout, and should be based 
*                    off of the following tints of a rich cool black. 
* Black - HEX #12031d| RGB 18R  3G   29B 
* Tints - 75% Black, 50% Black, 25% BLack, 10% Black, 5% Black
* 
*   Typography: All messaging should be kept as simple and legible as possible. Use consistent sizes and treatment for headlines, copy,
*               and any other type element to create a structure and improve readability.
*   White topography over gradients ensures proper contrast. 
*   DO NOT use gradients in topography. 
*   DO NOT use more than one color in topography           
*
* Fonts: Kockout - Can be used for titles and short headlines.
*        Helvetica - Use this font for longer headlines, body copy, and any web applications. **THIS IS OUR MAIN FONT**         
* 
*
*
* Tips:       (.name) The "."" makes this a class selector and we can apply .name 
*             to multiple elements. 
*             (#name1) The "#" makes this a class selector for a specific element. 
*
* Styles Defined:
*     .popup
*     .popup-buttons
*     .popup-buttons button
*     .popup-content
*     .popup-content-header
*     .popup-content-body
*     .popup-content-body p
*		  .popup-content-body li
*     .popup-content button
*     .popup-content button:hover
*     .popup-overlay
*     @media elements
*     
*/ 

/*
========================================================================================================
File Start
========================================================================================================
*/

  /**************************
  * .popup
  *
  * 
  */ 
  :root {
    --primary-bg: #12031d;
    --overlay-bg: rgba(0, 0, 0, 0.8);
    --text-primary: antiquewhite;
    --text-secondary: gray;
    --button-bg: #4a4a4a;
    --button-hover-bg: #592651;
    --button-hover-text: #f47c33;
    --shadow-color: rgba(0, 0, 0, 0.5);
    --border-radius: 15px;
    --font-primary: 'Inter', sans-serif;
  }
  
  /* Base popup styles */
  .popup {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 90%;
    max-width: 500px;
    height: auto;
    background: var(--primary-bg);
    box-shadow: 0px 10px 30px var(--shadow-color);
    border-radius: var(--border-radius);
    color: var(--text-primary);
    z-index: 1004;
    overflow: hidden;
    animation: fadeIn 0.3s ease-out;
  }
  
  /* Overlay background */
  .popup-overlay {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: var(--overlay-bg);
    z-index: 1003;
    animation: fadeIn 0.3s ease-out;
  }
  
  /* Header section */
  .popup-content-header {
    text-align: center;
    font-family: var(--font-primary);
    font-size: 2rem;
    font-weight: bold;
    color: var(--text-primary);
    padding: 20px;
    background: linear-gradient(90deg, #592651, #12031d);
    box-shadow: 0px 5px 10px var(--shadow-color);
    text-transform: uppercase;
  }
  
  /* Body section */
  .popup-content-body {
    padding: 20px;
    display: flex;
    flex-direction: column;
    gap: 15px;
    font-family: var(--font-primary);
  }
  
  .popup-content-body p {
    font-size: 1.2rem;
    color: var(--text-secondary);
    background: rgba(255, 255, 255, 0.05);
    border-radius: var(--border-radius);
    padding: 15px;
    text-align: center;
  }
  
  /* Button container */
  .popup-buttons {
    display: flex;
    justify-content: center;
    padding: 15px;
    background: var(--primary-bg);
    border-top: 1px solid rgba(255, 255, 255, 0.1);
  }
  
  /* Buttons */
  .popup-buttons button {
    background: var(--button-bg);
    color: var(--text-primary);
    font-size: 1rem;
    font-family: var(--font-primary);
    padding: 10px 20px;
    border: none;
    border-radius: var(--border-radius);
    cursor: pointer;
    transition: all 0.3s ease-in-out;
  }
  .popup-buttons button {
    animation: pulse 1.5s infinite;
}
@keyframes pulse {
    0%, 100% {
        transform: scale(1);
    }
    50% {
        transform: scale(1.05);
    }
}

  
  .popup-buttons button:hover {
    background: var(--button-hover-bg);
    color: var(--button-hover-text);
  }
  .popup-buttons button:hover {
    box-shadow: 0px 5px 15px rgba(244, 124, 51, 0.6);
}
  
  /* Media queries */
  @media (max-width: 768px) {
    .popup {
      width: 95%;
    }
  
    .popup-content-header {
      font-size: 1.5rem;
    }
  
    .popup-content-body p {
      font-size: 1rem;
    }
  
    .popup-buttons button {
      font-size: 0.9rem;
      padding: 8px 15px;
    }
  }
  
  /* Animations */
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translate(-50%, -45%);
    }
    to {
      opacity: 1;
      transform: translate(-50%, -50%);
    }
  }
    @keyframes fadeOut {
      from {
          opacity: 1;
          transform: translate(-50%, -50%);
      }
      to {
          opacity: 0;
          transform: translate(-50%, -45%);
      }
  }
  .popup.closing {
      animation: fadeOut 0.3s ease-in-out;
  }
  
  